---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    name: gwdc-db
  name: gwdc-db
  namespace: gwdc
spec:
  replicas: 1
  selector:
    matchLabels:
      name: gwdc-db
  serviceName: gwdc-db
  template:
    metadata:
      labels:
        name: gwdc-db
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    name: gwdc-db
                topologyKey: kubernetes.io/hostname
              weight: 1
      containers:
        - env:
            - name: MYSQL_ROOT_PASSWORD
              value: somewordpress
            - name: MYSQL_DATABASE
              value: wordpress
            - name: MYSQL_USER
              value: wordpress
            - name: MYSQL_PASSWORD
              value: wordpress
          image: mysql:5.7
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
                - sh
                - '-c'
                - |
                  password_aux="${MYSQL_ROOT_PASSWORD:-}"
                  if [ -f "${MYSQL_ROOT_PASSWORD_FILE:-}" ]; then
                      password_aux=$(cat $MYSQL_ROOT_PASSWORD_FILE)
                  fi
                  mysqladmin status -uroot -p$password_aux
            failureThreshold: 3
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: mysql
          ports:
            - name: port-mysql
              containerPort: 3306
          readinessProbe:
            exec:
              command:
                - sh
                - '-c'
                - |
                  password_aux="${MYSQL_ROOT_PASSWORD:-}"
                  if [ -f "${MYSQL_ROOT_PASSWORD_FILE:-}" ]; then
                      password_aux=$(cat $MYSQL_ROOT_PASSWORD_FILE)
                  fi
                  mysqladmin status -uroot -p$password_aux
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          volumeMounts:
            - name: nfs-mysql-data
              mountPath: "/var/lib/mysql"
      initContainers: []
      securityContext: {}
      serviceAccountName: default
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
    - metadata:
        labels:
          name: gwdc-db
        name: nfs-mysql-data
      spec:
        accessModes:
          - ReadWriteMany
        resources:
          requests:
            storage: 1Gi
        selector:
          matchLabels:
            volume: gwdc-db
...
